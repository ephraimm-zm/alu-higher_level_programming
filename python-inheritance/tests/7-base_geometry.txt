File tests for BaseGeometry class
=================================

Usage:
    >>> base_geometry = __import__('my_module').BaseGeometry()

Test Case: Call area method (not implemented)
---------------------------------------------

::
    >>> base_geometry.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Test Case: Valid integer value for integer_validator method
------------------------------------------------------------

::
    >>> base_geometry.integer_validator("test", 5)

Test Case: Invalid type for integer_validator method
------------------------------------------------------

::
    >>> base_geometry.integer_validator("test", "string")
    Traceback (most recent call last):
    TypeError: test must be an integer

Test Case: Invalid value for integer_validator method
------------------------------------------------------

::
    >>> base_geometry.integer_validator("test", -5)
    Traceback (most recent call last):
    ValueError: test must be greater than 0

Test Case: Invalid name type for integer_validator method
-----------------------------------------------------------

::
    >>> base_geometry.integer_validator(123, 5)
    Traceback (most recent call last):
    TypeError: <class 'int'> must be a string

Test Case: Check module documentation
--------------------------------------

::
    >>> docs = __import__('my_module').__doc__
    >>> len(docs) > 1
    True

Test Case: Check class documentation
-------------------------------------

::
    >>> docs = __import__('my_module').BaseGeometry.__doc__
    >>> len(docs) > 1
    True

Test Case: Check method documentation
--------------------------------------

::
    >>> docs = __import__('my_module').BaseGeometry.area.__doc__
    >>> len(docs) > 1
    True

::
    >>> docs = __import__('my_module').BaseGeometry.integer_validator.__doc__
    >>> len(docs) > 1
    True

